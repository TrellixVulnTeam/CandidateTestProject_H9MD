{"ast":null,"code":"import * as fromStore from \"../users/store\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction UserDetailComponent_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\", user_r4.id, \" - \", user_r4.name, \" \", user_r4.username, \"\");\n  }\n}\n\nfunction UserDetailComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, UserDetailComponent_ng_container_2_div_1_Template, 3, 3, \"div\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const users_r2 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", users_r2);\n  }\n}\n\nfunction UserDetailComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \" loading... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class UserDetailComponent {\n  constructor(_store$, route) {\n    this._store$ = _store$;\n    this.route = route;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      var _a;\n\n      this.userId = (_a = params.get('id')) === null || _a === void 0 ? void 0 : _a.toString();\n    });\n    this.users$ = this._store$.select(fromStore.selectAll);\n    this.loading$ = this._store$.select(fromStore.selectLoading);\n    this.model = this.users$;\n    pipe(map(items => items.filter(item => item.id.toString() == this.userId)));\n  }\n\n}\n\nUserDetailComponent.ɵfac = function UserDetailComponent_Factory(t) {\n  return new (t || UserDetailComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nUserDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserDetailComponent,\n  selectors: [[\"app-user-detail\"]],\n  decls: 6,\n  vars: 6,\n  consts: [[1, \"container\"], [1, \"users\"], [4, \"ngIf\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"users\", 4, \"ngFor\", \"ngForOf\"], [1, \"loading\"]],\n  template: function UserDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, UserDetailComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, UserDetailComponent_div_4_Template, 2, 0, \"div\", 3);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 2, ctx.users$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 4, ctx.loading$));\n    }\n  },\n  directives: [i3.NgIf, i3.NgForOf],\n  pipes: [i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/Users/yusufmac/Desktop/Firmalar/Mark IT GLOBAL/CandidateTestProject/src/app/user-detail/user-detail.component.ts","/Users/yusufmac/Desktop/Firmalar/Mark IT GLOBAL/CandidateTestProject/src/app/user-detail/user-detail.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { User } from '../users/store/models';\nimport * as fromStore from \"../users/store\";\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n  users$: Observable<User[]> | undefined;\n  loading$: Observable<boolean> | undefined;\n  model: User  ;\n  userId:string |undefined;\n  constructor(private _store$: Store,private route: ActivatedRoute) { \n    }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.userId = params.get('id')?.toString();\n    })\n    this.users$ = this._store$.select(fromStore.selectAll);\n    this.loading$ = this._store$.select(fromStore.selectLoading);\n    this.model = this.users$\n  \n    \n    \n    pipe (\n      map((items: User[]) => \n       items.filter(item => item.id.toString()==this.userId)))\n\n  }\n\n}\n","\n<div class=\"container\">\n<div class=\"users\">\n    <ng-container *ngIf=\"users$ | async as users\">\n      <div class=\"users\"\n           *ngFor=\"let user of users\">\n        <span>{{user.id}} - {{user.name}} {{user.username}}</span>\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"loading\"\n       *ngIf=\"loading$ | async\">\n    loading...\n  </div>\n<!--   \n  <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\">\n    <div class=\"form-group\">\n      <label>Name</label>\n      <input type=\"text\" name=\"name\" class=\"form-control\" [(ngModel)]=\"model.name\" >\n    </div>\n  \n    <div class=\"form-group\">\n      <label>User Name</label>\n      <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"model.username\" >\n    </div>\n  \n    <div class=\"form-group\">\n      <label>Email</label>\n      <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"model.email\" >\n    </div>\n  </form>\n   -->\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}